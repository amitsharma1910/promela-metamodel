package paser.xpath2;
/* Generated By:JJTree&JavaCC: Do not edit this line. XPathConstants.java */
public interface XPathConstants {

  int EOF = 0;
  int IntegerLiteral = 76;
  int DecimalLiteral = 77;
  int DoubleLiteral = 78;
  int StringLiteral = 79;
  int skip_ = 81;
  int Minus = 82;
  int Plus = 83;
  int External = 84;
  int Prefix = 85;
  int LocalPart = 86;
  int Nmstart = 87;
  int Nmchar = 88;
  int EscapeQuot = 89;
  int EscapeApos = 90;
  int LessThanOpOrTagO = 91;
  int Comment = 92;
  int CommentStart = 93;
  int CommentContent = 94;
  int CommentEnd = 95;
  int Slash = 96;
  int SlashSlash = 97;
  int QNameToken = 98;
  int NCNameTok = 99;
  int NCNameColonStar = 100;
  int StarColonNCName = 101;
  int Char = 102;
  int Digits = 103;
  int CommentContents = 104;
  int WhitespaceChar = 105;
  int Letter = 106;
  int BaseChar = 107;
  int Ideographic = 108;
  int CombiningChar = 109;
  int Digit = 110;
  int Extender = 111;
  int NotNumber = 112;

  int DEFAULT = 0;
  int OPERAND = 1;
  int OPERATOR = 2;
  int SINGLETYPE = 3;
  int ITEMTYPE = 4;
  int KINDTEST = 5;
  int CLOSEKINDTEST = 6;
  int OCCURRENCEINDICATOR = 7;
  int VARNAME = 8;
  int EXPR_COMMENT = 9;

  String[] tokenImage = {
    "<EOF>",
    "\",\"",
    "\"return\"",
    "\"for\"",
    "\"$\"",
    "\"in\"",
    "\"some\"",
    "\"every\"",
    "\"satisfies\"",
    "\"if\"",
    "\"(\"",
    "\")\"",
    "\"then\"",
    "\"else\"",
    "\"or\"",
    "\"and\"",
    "\"to\"",
    "\"*\"",
    "\"div\"",
    "\"idiv\"",
    "\"mod\"",
    "\"union\"",
    "\"|\"",
    "\"intersect\"",
    "\"except\"",
    "\"instance\"",
    "\"of\"",
    "\"treat\"",
    "\"as\"",
    "\"castable\"",
    "\"cast\"",
    "\"=\"",
    "\"!=\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"eq\"",
    "\"ne\"",
    "\"lt\"",
    "\"le\"",
    "\"gt\"",
    "\"ge\"",
    "\"is\"",
    "\"<<\"",
    "\">>\"",
    "\"child\"",
    "\"::\"",
    "\"descendant\"",
    "\"attribute\"",
    "\"self\"",
    "\"descendant-or-self\"",
    "\"following-sibling\"",
    "\"following\"",
    "\"namespace\"",
    "\"@\"",
    "\"parent\"",
    "\"ancestor\"",
    "\"preceding-sibling\"",
    "\"preceding\"",
    "\"ancestor-or-self\"",
    "\"..\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"?\"",
    "\"empty-sequence\"",
    "\"item\"",
    "\"node\"",
    "\"document-node\"",
    "\"text\"",
    "\"comment\"",
    "\"processing-instruction\"",
    "\"schema-attribute\"",
    "\"element\"",
    "\"schema-element\"",
    "\"type\"",
    "<IntegerLiteral>",
    "<DecimalLiteral>",
    "<DoubleLiteral>",
    "<StringLiteral>",
    "<token of kind 80>",
    "<skip_>",
    "\"-\"",
    "\"+\"",
    "\"external\"",
    "<Prefix>",
    "<LocalPart>",
    "<Nmstart>",
    "<Nmchar>",
    "\"\\\"\\\"\"",
    "\"\\\'\\\'\"",
    "\"<\"",
    "<Comment>",
    "\"(:\"",
    "<CommentContent>",
    "\":)\"",
    "\"/\"",
    "\"//\"",
    "<QNameToken>",
    "<NCNameTok>",
    "<NCNameColonStar>",
    "<StarColonNCName>",
    "<Char>",
    "<Digits>",
    "<CommentContents>",
    "<WhitespaceChar>",
    "<Letter>",
    "<BaseChar>",
    "<Ideographic>",
    "<CombiningChar>",
    "<Digit>",
    "<Extender>",
    "<NotNumber>",
  };

}
